@startuml Diagrama de Classes - Emergia

' Definição de estilos
skinparam classAttributeIconSize 0
skinparam classFontStyle bold
skinparam classFontSize 14
skinparam classBackgroundColor #F8F9FA
skinparam classBorderColor #DEE2E6
skinparam packageBackgroundColor #E9ECEF
skinparam packageBorderColor #CED4DA

' Pacotes principais
package "database" {
  class AtributosFixos {
    # diasAno: int
    # mesAno: int
    # conversaoToneladaParaGramas: double
    # qtdEnergiaPorKilo: double
    # transformidadeAguaUsada: double
    # anos: int
    # joulesPorTonelada: double
    # toneladaPorLitro: double
    # transformidadeCombustivelUsado: double
    # transformidadeCuidadoSolo: double
    # kwhParaKcal: int
    # energiaPorKcal: int
    # transformidadeEletricidade: double
    # energiaPessoaAno: double
    # transformidadeMaoObra: double
    # gramasMOporGramasSolo: double
    # kcalPorGrama: double
    # joulesPorKcal: double
    # transformidadePerdaSolo: double
    # conversaoM2porHa: double
    # kgPorM3: double
    # energiaPorKg: double
    # transformidadePontencialQuimico: double
    # litroParaGrama: double
    # kcalPorGramaLeite: double
    # joulesPorKcalLeite: double
    # transformidadeProducaoleite: double
    # pesoSecoPorAnimal: double
    # kcalPorGramaCarne: double
    # gramasPorKg: double
    # transformidadeGado: double
    # transformidadeRacao: double
    # transformidadeMaquinario: double
    + getTransformidadeProducaoleite(): double
    + getTransformidadeGado(): double
    + getTransformidadePontencialQuimico(): double
    + getTransformidadePerdaSolo(): double
    + getTransformidadeMaquinario(): double
    + getTransformidadeCuidadoSolo(): double
    + getTransformidadeRacao(): double
    + getTransformidadeAguaUsada(): double
    + getTransformidadeCombustivelUsado(): double
    + getTransformidadeEletricidade(): double
    + getTransformidadeMaoObra(): double
    + getPesoSecoPorAnimal(): double
    + getKcalPorGramaCarne(): double
    + getGramasPorKg(): double
    + getDiasAno(): int
    + getMesAno(): int
    + getQtdEnergiaPorKilo(): double
    + getAnos(): int
    + getJoulesPorTonelada(): double
    + getToneladaPorLitro(): double
    + getKwhParaKcal(): int
    + getEnergiaPorKcal(): int
    + getEnergiaPessoaAno(): double
    + getConversaoToneladaParaGramas(): double
    + getGramasMOporGramasSolo(): double
    + getKcalPorGrama(): double
    + getJoulesPorKcal(): double
    + getConversaoHaParaM2(): double
    + getKgPorM3(): double
    + getEnergiaPorKg(): double
    + getLitroParaGrama(): double
    + getKcalPorGramaLeite(): double
    + getJoulesPorKcalLeite(): double
  }
  
  class Relatorio {
    - id: Long
    - aguaUsada: double
    - perdaSolo: double
    - potencialQuimico: double
    - valorConsumoManutencao: double
    - combustivelUsado: double
    - cuidadoSolo: double
    - eletricidade: double
    - gado: double
    - maoObra: double
    - maquinarios: double
    - racao: double
    - producaoLeite: double
    - refAguaUsada: double
    - refPerdaSolo: double
    - refPotencialQuimico: double
    - refValorConsumoManutencao: double
    - refCombustivelUsado: double
    - refCuidadoSolo: double
    - refEletricidade: double
    - refGado: double
    - refMaoObra: double
    - refMaquinarios: double
    - refRacao: double
    - refProducaoLeite: double
    - razaoAguaUsada: double
    - razaoPerdaSolo: double
    - razaoPotencialQuimico: double
    - razaoValorConsumoManutencao: double
    - razaoCombustivelUsado: double
    - razaoCuidadoSolo: double
    - razaoEletricidade: double
    - razaoGado: double
    - razaoMaoObra: double
    - razaoMaquinarios: double
    - razaoRacao: double
    - razaoProducaoLeite: double
    + getters/setters
  }
}

package "models" {
  package "contribuicaoAmbiental" {
    package "energiaNaoRenovavel" {
      class AguaUsada {
        - litroPorDiaAnimal: double
        - qtdAnimal: int
        - litrosAdicionalDia: double
        - resulAguaUsada: double
        - resulRefEmergiaSolarAguaUsada: double
        - razaoAguaUsada: double
        - unidadeAguaUsada: String
        + AguaUsada()
        + AguaUsada(litroPorDiaAnimal: double, qtdAnimal: int, litrosAdicionalDia: double)
        + calcAU(): double
        + calRefEmergiaSolarAguaUsada(): double
        + calcRazaoAguaUsada(): double
        + getters/setters
      }
      
      class PerdaSolo {
        - perdaDeSoloToneladasPorAno: double
        - resulPerdaSolo: double
        - resulRefEmergiaSolarPerdaSolo: double
        - razaoPerdaSolo: double
        - unidadePerdaSolo: String
        + PerdaSolo()
        + PerdaSolo(perdaDeSoloToneladasPorAno: double)
        + calcPS(): double
        + calRefEmergiaSolarPerdaSolo(): double
        + calcRazaoPerdaSolo(): double
        + getters/setters
      }
    }
    
    package "energiaRenovavel" {
      class PotencialQuimico {
        - haFazenda: double
        - mediaChuvaAnoMetros: double
        - resulPotencialQuimico: double
        - resulRefEmergiaSolarPotencialQuimico: double
        - razaoPotencialQuimico: double
        - unidadePotencialQuimico: String
        + PotencialQuimico()
        + PotencialQuimico(haFazenda: double, mediaChuvaAnoMetros: double)
        + calcPQ(): double
        + calRefEmergiaSolarPotencialQuimico(): double
        + calcRazaoPotencialQuimico(): double
        + getters/setters
      }
    }
  }
  
  package "contribuicaoHumana" {
    package "bens" {
      class ValorConsumoManutencao {
        - bens: double
        - anos: int
        - resulVCM: double
        - resulRefEmergiaSolarVCM: double
        - razaoVCM: double
        - unidadeVCM: String
        + ValorConsumoManutencao()
        + ValorConsumoManutencao(bens: double, anos: int)
        + calcVCM(): double
        + calRefEmergiaSolarVCM(): double
        + calcRazaoVCM(): double
        + getters/setters
      }
    }
    
    package "operacoesProducao" {
      class CombustivelUsado {
        - litrosPorAno: double
        - resulCombustivelUsado: double
        - resulRefEmergiaSolarCombustivelUsado: double
        - razaoCombustivelUsado: double
        - unidadeCombustivelUsado: String
        + CombustivelUsado()
        + CombustivelUsado(litrosPorAno: double)
        + calcCU(): double
        + calRefEmergiaSolarCombustivelUsado(): double
        + calcRazaoCombustivelUsado(): double
        + getters/setters
      }
      
      class CuidadoSolo {
        - valorAnual: double
        - resulCuidadoSolo: double
        - resulRefEmergiaSolarCuidadoSolo: double
        - razaoCuidadoSolo: double
        - unidadeCuidadoSolo: String
        + CuidadoSolo()
        + CuidadoSolo(valorAnual: double)
        + calcCS(): double
        + calRefEmergiaSolarCuidadoSolo(): double
        + calcRazaoCuidadoSolo(): double
        + getters/setters
      }
      
      class Eletricidade {
        - kwhPorMes: double
        - resulEletricidade: double
        - resulRefEmergiaSolarEletricidade: double
        - razaoEletricidade: double
        - unidadeEletricidade: String
        + Eletricidade()
        + Eletricidade(kwhPorMes: double)
        + calcE(): double
        + calRefEmergiaSolarEletricidade(): double
        + calcRazaoEletricidade(): double
        + getters/setters
      }
      
      class Gado {
        - qtdAnimais: int
        - pesoMedioAnimal: double
        - resulGado: double
        - resulRefEmergiaSolarGado: double
        - razaoGado: double
        - unidadeGado: String
        + Gado()
        + Gado(qtdAnimais: int, pesoMedioAnimal: double)
        + calcG(): double
        + calRefEmergiaSolarGado(): double
        + calcRazaoGado(): double
        + getters/setters
      }
      
      class MaoObra {
        - qtdPessoas: int
        - horasPorDia: double
        - diasPorAno: int
        - resulMaoObra: double
        - resulRefEmergiaSolarMaoObra: double
        - razaoMaoObra: double
        - unidadeMaoObra: String
        + MaoObra()
        + MaoObra(qtdPessoas: int, horasPorDia: double, diasPorAno: int)
        + calcMO(): double
        + calRefEmergiaSolarMaoObra(): double
        + calcRazaoMaoObra(): double
        + getters/setters
      }
      
      class Maquinarios {
        - valorMaquinarios: double
        - resulMaquinarios: double
        - resulRefEmergiaSolarMaquinarios: double
        - razaoMaquinarios: double
        - unidadeMaquinarios: String
        + Maquinarios()
        + Maquinarios(valorMaquinarios: double)
        + calcM(): double
        + calRefEmergiaSolarMaquinarios(): double
        + calcRazaoMaquinarios(): double
        + getters/setters
      }
      
      class Racao {
        - valorRacao: double
        - resulRacao: double
        - resulRefEmergiaSolarRacao: double
        - razaoRacao: double
        - unidadeRacao: String
        + Racao()
        + Racao(valorRacao: double)
        + calcR(): double
        + calRefEmergiaSolarRacao(): double
        + calcRazaoRacao(): double
        + getters/setters
      }
    }
  }
  
  package "producao" {
    class ProducaoLeite {
      - litrosPorDia: double
      - diasProducao: int
      - resulProducaoLeite: double
      - resulRefEmergiaSolarProducaoLeite: double
      - razaoProducaoLeite: double
      - unidadeProducaoLeite: String
      + ProducaoLeite()
      + ProducaoLeite(litrosPorDia: double, diasProducao: int)
      + calcPL(): double
      + calRefEmergiaSolarProducaoLeite(): double
      + calcRazaoProducaoLeite(): double
      + getters/setters
    }
  }
  
  package "subtotais" {
    class CalculoTotal {
      - subtotalAmbiental: SubtotalAmbiental
      - subtotalContribuicaoHumana: SubtotalContribuicaoHumana
      - subtotalProducao: SubtotalPoducao
      - eyr: EYR
      - elr: ELR
      - eir: EIR
      - esi: ESI
      + CalculoTotal()
      + CalculoTotal(subtotalAmbiental: SubtotalAmbiental, subtotalContribuicaoHumana: SubtotalContribuicaoHumana, subtotalProducao: SubtotalPoducao)
      + calcularIndices(): void
      + getters/setters
    }
    
    class SubtotalAmbiental {
      - potencialQuimico: PotencialQuimico
      - aguaUsada: AguaUsada
      - perdaSolo: PerdaSolo
      - totalRenovavel: double
      - totalNaoRenovavel: double
      - totalAmbiental: double
      + SubtotalAmbiental()
      + SubtotalAmbiental(potencialQuimico: PotencialQuimico, aguaUsada: AguaUsada, perdaSolo: PerdaSolo)
      + calcularTotais(): void
      + getters/setters
    }
    
    class SubtotalContribuicaoHumana {
      - valorConsumoManutencao: ValorConsumoManutencao
      - combustivelUsado: CombustivelUsado
      - cuidadoSolo: CuidadoSolo
      - eletricidade: Eletricidade
      - gado: Gado
      - maoObra: MaoObra
      - maquinarios: Maquinarios
      - racao: Racao
      - totalBens: double
      - totalOperacoesProducao: double
      - totalContribuicaoHumana: double
      + SubtotalContribuicaoHumana()
      + SubtotalContribuicaoHumana(valorConsumoManutencao: ValorConsumoManutencao, combustivelUsado: CombustivelUsado, cuidadoSolo: CuidadoSolo, eletricidade: Eletricidade, gado: Gado, maoObra: MaoObra, maquinarios: Maquinarios, racao: Racao)
      + calcularTotais(): void
      + getters/setters
    }
    
    class SubtotalPoducao {
      - producaoLeite: ProducaoLeite
      - totalProducao: double
      + SubtotalPoducao()
      + SubtotalPoducao(producaoLeite: ProducaoLeite)
      + calcularTotal(): void
      + getters/setters
    }
  }
  
  package "sustentabilidade" {
    class EIR {
      - subtotalContribuicaoHumana: double
      - subtotalAmbiental: double
      - valorEIR: double
      + EIR()
      + EIR(subtotalContribuicaoHumana: double, subtotalAmbiental: double)
      + calcularEIR(): double
      + getters/setters
    }
    
    class ELR {
      - totalNaoRenovavel: double
      - totalContribuicaoHumana: double
      - totalRenovavel: double
      - valorELR: double
      + ELR()
      + ELR(totalNaoRenovavel: double, totalContribuicaoHumana: double, totalRenovavel: double)
      + calcularELR(): double
      + getters/setters
    }
    
    class ESI {
      - valorEYR: double
      - valorELR: double
      - valorESI: double
      + ESI()
      + ESI(valorEYR: double, valorELR: double)
      + calcularESI(): double
      + getters/setters
    }
    
    class EYR {
      - totalEmergiaEntrada: double
      - totalContribuicaoHumana: double
      - valorEYR: double
      + EYR()
      + EYR(totalEmergiaEntrada: double, totalContribuicaoHumana: double)
      + calcularEYR(): double
      + getters/setters
    }
  }
}

package "repository" {
  interface RelatorioRepository {
    + findAll(): List<Relatorio>
    + findById(id: Long): Optional<Relatorio>
    + save(relatorio: Relatorio): Relatorio
    + deleteById(id: Long): void
  }
}

package "controllers" {
  class RelatorioController {
    - relatorioRepository: RelatorioRepository
    + getAllRelatorios(): List<Relatorio>
    + getRelatorioById(id: Long): Relatorio
    + createRelatorio(relatorio: Relatorio): Relatorio
    + updateRelatorio(id: Long, relatorio: Relatorio): Relatorio
    + deleteRelatorio(id: Long): void
  }
}

' Relacionamentos
AtributosFixos <|-- AguaUsada
AtributosFixos <|-- PerdaSolo
AtributosFixos <|-- PotencialQuimico
AtributosFixos <|-- ValorConsumoManutencao
AtributosFixos <|-- CombustivelUsado
AtributosFixos <|-- CuidadoSolo
AtributosFixos <|-- Eletricidade
AtributosFixos <|-- Gado
AtributosFixos <|-- MaoObra
AtributosFixos <|-- Maquinarios
AtributosFixos <|-- Racao
AtributosFixos <|-- ProducaoLeite

SubtotalAmbiental o-- PotencialQuimico
SubtotalAmbiental o-- AguaUsada
SubtotalAmbiental o-- PerdaSolo

SubtotalContribuicaoHumana o-- ValorConsumoManutencao
SubtotalContribuicaoHumana o-- CombustivelUsado
SubtotalContribuicaoHumana o-- CuidadoSolo
SubtotalContribuicaoHumana o-- Eletricidade
SubtotalContribuicaoHumana o-- Gado
SubtotalContribuicaoHumana o-- MaoObra
SubtotalContribuicaoHumana o-- Maquinarios
SubtotalContribuicaoHumana o-- Racao

SubtotalPoducao o-- ProducaoLeite

CalculoTotal o-- SubtotalAmbiental
CalculoTotal o-- SubtotalContribuicaoHumana
CalculoTotal o-- SubtotalPoducao
CalculoTotal o-- EYR
CalculoTotal o-- ELR
CalculoTotal o-- EIR
CalculoTotal o-- ESI

RelatorioController o-- RelatorioRepository

@enduml
